{
  "stats": {
    "suites": 3,
    "tests": 7,
    "passes": 6,
    "pending": 0,
    "failures": 1,
    "start": "2023-05-11T14:13:04.906Z",
    "end": "2023-05-11T14:13:05.688Z",
    "duration": 782
  },
  "tests": [
    {
      "title": "has a class of cat",
      "fullTitle": "cat has a class of cat",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cat.speak() returns '[name]' says meow!",
      "fullTitle": "cat cat.speak() returns '[name]' says meow!",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has a class of dog",
      "fullTitle": "dog has a class of dog",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "dog.speak() returns '[name] says woof!'",
      "fullTitle": "dog dog.speak() returns '[name] says woof!'",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has a class of Bird",
      "fullTitle": "bird has a class of Bird",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "bird.speak() returns 'It's me! [name], the parrot!'",
      "fullTitle": "bird bird.speak() returns 'It's me! [name], the parrot!'",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected 'Mable says squawk!' to equal 'It\\'s me! Pablo, the parrot!'",
        "showDiff": true,
        "actual": "Mable says squawk!",
        "expected": "It's me! Pablo, the parrot!",
        "stack": "AssertionError: expected 'Mable says squawk!' to equal 'It\\'s me! Pablo, the parrot!'\n    at Context.<anonymous> (test\\indexTest.js:39:29)\n    at process.processImmediate (node:internal/timers:476:21)"
      }
    },
    {
      "title": "bird2.speak() returns 'Squawk!'",
      "fullTitle": "bird bird2.speak() returns 'Squawk!'",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "bird.speak() returns 'It's me! [name], the parrot!'",
      "fullTitle": "bird bird.speak() returns 'It's me! [name], the parrot!'",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected 'Mable says squawk!' to equal 'It\\'s me! Pablo, the parrot!'",
        "showDiff": true,
        "actual": "Mable says squawk!",
        "expected": "It's me! Pablo, the parrot!",
        "stack": "AssertionError: expected 'Mable says squawk!' to equal 'It\\'s me! Pablo, the parrot!'\n    at Context.<anonymous> (test\\indexTest.js:39:29)\n    at process.processImmediate (node:internal/timers:476:21)"
      }
    }
  ],
  "passes": [
    {
      "title": "has a class of cat",
      "fullTitle": "cat has a class of cat",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "cat.speak() returns '[name]' says meow!",
      "fullTitle": "cat cat.speak() returns '[name]' says meow!",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has a class of dog",
      "fullTitle": "dog has a class of dog",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "dog.speak() returns '[name] says woof!'",
      "fullTitle": "dog dog.speak() returns '[name] says woof!'",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has a class of Bird",
      "fullTitle": "bird has a class of Bird",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "bird2.speak() returns 'Squawk!'",
      "fullTitle": "bird bird2.speak() returns 'Squawk!'",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}